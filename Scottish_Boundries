{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOBPhw5sHbRy/S59ttYAFYL",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Meowmixforme/Geopandas-Test/blob/main/Scottish_Boundries\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "OGoY58NeM97V"
      },
      "outputs": [],
      "source": [
        "import geopandas as gpd"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import geopandas as gpd\n",
        "import fiona\n",
        "\n",
        "with fiona.Env(SHAPE_RESTORE_SHX='YES'):\n",
        "    boundries = gpd.read_file('pub_las.shp')\n",
        "print(boundries)\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mrtq31haNEtR",
        "outputId": "f9b35ad1-986f-4f79-d31b-8e0fcfac1a9f"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                                             geometry\n",
            "0   POLYGON ((316464.998 776753.496, 316489.503 77...\n",
            "1   POLYGON ((291801.173 688448.131, 291468.199 68...\n",
            "2   POLYGON ((332974.703 731066.604, 332829.400 73...\n",
            "3   POLYGON ((241287.603 653032.301, 241301.100 65...\n",
            "4   POLYGON ((250190.703 678031.705, 250198.503 67...\n",
            "5   POLYGON ((240058.354 655507.094, 240058.390 65...\n",
            "6   POLYGON ((288600.897 691308.005, 288630.101 69...\n",
            "7   POLYGON ((258096.702 672970.504, 258136.798 67...\n",
            "8   POLYGON ((236691.402 674686.203, 236712.897 67...\n",
            "9   POLYGON ((347072.999 658736.098, 347070.500 65...\n",
            "10  POLYGON ((272346.600 683872.603, 272407.201 68...\n",
            "11  POLYGON ((332974.703 731066.604, 332999.397 73...\n",
            "12  POLYGON ((250424.500 668812.904, 250576.003 66...\n",
            "13  POLYGON ((377415.800 672672.700, 377411.500 67...\n",
            "14  POLYGON ((262088.598 663444.900, 262096.604 66...\n",
            "15  POLYGON ((237551.502 734670.002, 237568.001 73...\n",
            "16  POLYGON ((238422.898 690979.899, 238442.999 69...\n",
            "17  POLYGON ((302261.504 656046.998, 301976.101 65...\n",
            "18  MULTIPOLYGON (((238924.503 750168.496, 238918....\n",
            "19  MULTIPOLYGON (((352324.388 867640.741, 352316....\n",
            "20  MULTIPOLYGON (((331563.930 1030321.740, 331571...\n",
            "21  MULTIPOLYGON (((239380.504 750213.503, 239403....\n",
            "22  MULTIPOLYGON (((352897.520 868195.600, 352902....\n",
            "23  MULTIPOLYGON (((345142.680 729393.000, 345150....\n",
            "24  MULTIPOLYGON (((396527.951 813453.641, 396527....\n",
            "25  MULTIPOLYGON (((332968.196 673469.926, 332830....\n",
            "26  MULTIPOLYGON (((332085.803 671460.196, 332054....\n",
            "27  MULTIPOLYGON (((452156.000 1206081.500, 452163...\n",
            "28  MULTIPOLYGON (((225064.253 669790.328, 225067....\n",
            "29  MULTIPOLYGON (((342644.799 576206.702, 342613....\n",
            "30  MULTIPOLYGON (((236767.504 636864.199, 236849....\n",
            "31  MULTIPOLYGON (((152019.227 966602.488, 152022....\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "type(boundries)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 187
        },
        "id": "zdYxnC1GU2YX",
        "outputId": "d6436c62-efe2-4421-9410-bbf28addc34e"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "geopandas.geodataframe.GeoDataFrame"
            ],
            "text/html": [
              "<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n",
              "      pre.function-repr-contents {\n",
              "        overflow-x: auto;\n",
              "        padding: 8px 12px;\n",
              "        max-height: 500px;\n",
              "      }\n",
              "\n",
              "      pre.function-repr-contents.function-repr-contents-collapsed {\n",
              "        cursor: pointer;\n",
              "        max-height: 100px;\n",
              "      }\n",
              "    </style>\n",
              "    <pre style=\"white-space: initial; background:\n",
              "         var(--colab-secondary-surface-color); padding: 8px 12px;\n",
              "         border-bottom: 1px solid var(--colab-border-color);\"><b>geopandas.geodataframe.GeoDataFrame</b><br/>def __init__(data=None, *args, geometry=None, crs=None, **kwargs)</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/geopandas/geodataframe.py</a>A GeoDataFrame object is a pandas.DataFrame that has a column\n",
              "with geometry. In addition to the standard DataFrame constructor arguments,\n",
              "GeoDataFrame also accepts the following keyword arguments:\n",
              "\n",
              "Parameters\n",
              "----------\n",
              "crs : value (optional)\n",
              "    Coordinate Reference System of the geometry objects. Can be anything accepted by\n",
              "    :meth:`pyproj.CRS.from_user_input() &lt;pyproj.crs.CRS.from_user_input&gt;`,\n",
              "    such as an authority string (eg &quot;EPSG:4326&quot;) or a WKT string.\n",
              "geometry : str or array (optional)\n",
              "    If str, column to use as geometry. If array, will be set as &#x27;geometry&#x27;\n",
              "    column on GeoDataFrame.\n",
              "\n",
              "Examples\n",
              "--------\n",
              "Constructing GeoDataFrame from a dictionary.\n",
              "\n",
              "&gt;&gt;&gt; from shapely.geometry import Point\n",
              "&gt;&gt;&gt; d = {&#x27;col1&#x27;: [&#x27;name1&#x27;, &#x27;name2&#x27;], &#x27;geometry&#x27;: [Point(1, 2), Point(2, 1)]}\n",
              "&gt;&gt;&gt; gdf = geopandas.GeoDataFrame(d, crs=&quot;EPSG:4326&quot;)\n",
              "&gt;&gt;&gt; gdf\n",
              "    col1                 geometry\n",
              "0  name1  POINT (1.00000 2.00000)\n",
              "1  name2  POINT (2.00000 1.00000)\n",
              "\n",
              "Notice that the inferred dtype of &#x27;geometry&#x27; columns is geometry.\n",
              "\n",
              "&gt;&gt;&gt; gdf.dtypes\n",
              "col1          object\n",
              "geometry    geometry\n",
              "dtype: object\n",
              "\n",
              "Constructing GeoDataFrame from a pandas DataFrame with a column of WKT geometries:\n",
              "\n",
              "&gt;&gt;&gt; import pandas as pd\n",
              "&gt;&gt;&gt; d = {&#x27;col1&#x27;: [&#x27;name1&#x27;, &#x27;name2&#x27;], &#x27;wkt&#x27;: [&#x27;POINT (1 2)&#x27;, &#x27;POINT (2 1)&#x27;]}\n",
              "&gt;&gt;&gt; df = pd.DataFrame(d)\n",
              "&gt;&gt;&gt; gs = geopandas.GeoSeries.from_wkt(df[&#x27;wkt&#x27;])\n",
              "&gt;&gt;&gt; gdf = geopandas.GeoDataFrame(df, geometry=gs, crs=&quot;EPSG:4326&quot;)\n",
              "&gt;&gt;&gt; gdf\n",
              "    col1          wkt                 geometry\n",
              "0  name1  POINT (1 2)  POINT (1.00000 2.00000)\n",
              "1  name2  POINT (2 1)  POINT (2.00000 1.00000)\n",
              "\n",
              "See also\n",
              "--------\n",
              "GeoSeries : Series object designed to store shapely geometry objects</pre>\n",
              "      <script>\n",
              "      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n",
              "        for (const element of document.querySelectorAll('.filepath')) {\n",
              "          element.style.display = 'block'\n",
              "          element.onclick = (event) => {\n",
              "            event.preventDefault();\n",
              "            event.stopPropagation();\n",
              "            google.colab.files.view(element.textContent, 72);\n",
              "          };\n",
              "        }\n",
              "      }\n",
              "      for (const element of document.querySelectorAll('.function-repr-contents')) {\n",
              "        element.onclick = (event) => {\n",
              "          event.preventDefault();\n",
              "          event.stopPropagation();\n",
              "          element.classList.toggle('function-repr-contents-collapsed');\n",
              "        };\n",
              "      }\n",
              "      </script>\n",
              "      </div>"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "boundries.plot()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 462
        },
        "id": "5EQLuOOaXaMx",
        "outputId": "a3c936fe-82c9-4703-b542-61317c0f0891"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: >"
            ]
          },
          "metadata": {},
          "execution_count": 13
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "D14ll4QKYCnr"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}